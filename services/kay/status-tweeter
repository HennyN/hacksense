#!/usr/bin/env python

import sys
sys.path.insert(0, "/srv/hacksense/lib")

import hacksense
import time
import urllib
import urllib2

open_secret = hacksense.config["open_secret"]
closed_secret = hacksense.config["closed_secret"]

def callback(ch, method, properties, body):
    topic = method.routing_key
    headers = properties.headers
    if headers.has_key('status'):
        status = headers['status']
        if status == 'open':
            values = {'k': open_secret}
            data = urllib.urlencode(values)
            req = urllib2.Request('http://www.edinburghhacklab.com/internal/occupancy.php', data)
            if urllib2.urlopen(req).read() == 'DONE':
                conn.publish("actions.speak", {"data": "Tweet successful"})
            else:
                conn.publish("actions.speak", {"data": "Sorry, I could not send the tweet"})
        elif status == 'closed':
            values = {'k': closed_secret}
            data = urllib.urlencode(values)
            req = urllib2.Request('http://www.edinburghhacklab.com/internal/occupancy.php', data)
            if urllib2.urlopen(req).read() == 'DONE':
                conn.publish("actions.speak", {"data": "Tweet successful"})
            else:
                conn.publish("actions.speak", {"data": "Sorry, I could not send the tweet"})

conn = hacksense.AMQPTopic()
conn.subscribe_callback("sensors.openswitch", callback)
