#!/usr/bin/env python

import sys
sys.path.insert(0, "/srv/hacksense/lib")

import hacksense
import logging
import time

hacksense.setup_logging(redirect=True)
logging.basicConfig()
logging.getLogger().setLevel(logging.INFO)

uids = {
    '045C7112F32280': [('actions.speak', {'data': 'Hello Tim'}, '')],
    '1F16B0DA': [('actions.speak', {'data': 'Hello Al'}, '')],
    'EE0B9FF0': [('actions.speak', {'data': 'Hello Al'}, '')],
    '04C04BB25D2B80': [('actions.speak', {'data': 'Hello Friend'}, '')]
}

def callback(ch, method, properties, body):
    global conn

    topic = method.routing_key
    timestamp = properties.timestamp
    headers = properties.headers

    logging.info("%s %s %r" % (timestamp, topic, headers))

    uid = headers.get('uid')
    if uid:
        logging.info("uid %s" % (uid))
    else:
        return

    actions = uids.get(uid)
    
    if actions is not None:
        logging.info("actions found for uid %s" % (uid))
        for action in actions:
            logging.info(repr(action))
            conn.publish(action[0], action[1], action[2])

conn = hacksense.AMQPTopic()
conn.subscribe_callback("doorbot.card.swipe", callback)
